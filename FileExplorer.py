import os

"""Program that performs basic file explorer functionality.

Program allows setting of current working directory, and listing of files/sub-
directories in current directory. Files listed in the directory can be filtered
by file type. Files/sub-directories are given a correspoding number allowing
selection of a file using a number. Funciton returns a list of files (in the
case of only wanting to select a single file the list is 1 item long).
"""
     
def set_dir():
    """Funciton that sets the working directory.

    First lists the current working directory and asks if this is the correct
    directory. If no, then the directory must be specified by the user. Returns
    a new directory as the current wokring directory.
    """

    #Print current working directory
    working_dir = os.getcwd()
    print("Current wokring directory: {}".format(working_dir))

    #Check working directory, and collect new directory if incorrect    
    

    while True:
        
        #Query if current wokring directory is correct
        query = input("Is current working directory correct? Y/N")
        if query == "Y" or query == "y":
            print("y")
            return False
        elif query == "N" or query == "n":
            print("n")
            working_dir = input("Enter new working directory")
            print("Current wokring directory: {}".format(working_dir))
            return True
            
        
    
    pass


def list_children(working_dir):
    """Function prints a list of all children in the current directory.

    Children include files and sub-directories assosiated with a number. 
    Children are stored in a dicitonary and assinged a numeric value. The
    zero value is set as '...' by default, as a placeholder for the parent dir.
    """

    #Initialise dictionary containing '...' as placeholder for parent dir
    child_dict = dict({0: "..."})

    #Get the list of children in the current working directory
    dir_list = os.listdir(working_dir)

    #Iterate over the list of children and add to the children dictionary
    #setting the key as the file/folder name and incrementing the value
    n = 1
    for i in dir_list:
        child_dict[n] = i
        n += 1
        
    #Create sorted lists of the keys and values from the children dictionary
    children_key_list = sorted(child_dict.keys())
    children_value_list = sorted(child_dict.values())

    #Print each key/value pair in an easy to read manner
    print(working_dir)
    for n in range(len(children_key_list)):
        print("[{}] {}".format(children_key_list[n], children_value_list[n])) 


    #Return the dictionary of file/folder name keys and number value pairs
    return child_dict

def change_dir(current_dir):
    """Function that can change to a selected directory.

    Can change to the parent of the current directory, or to a sub directory
    by selecting the assosiated number generated by list_children().
    """

    child_dict = list_children(current_dir)

    new_dir_number = int(input("Enter a number to select the corresponding dir"))
   
    if new_dir_number == 0:
        return os.chdir(os.path.dirname(current_dir))
    elif new_dir_number != 0:
        try:
            sub_dir = child_dict[int(new_dir_number)]
            os.chdir(os.path.join(current_dir, sub_dir))
        except NotADirectoryError:
            print("Not a valid directory")

        
    return
    
def browse_dir():
    while True:
        change_dir(os.getcwd())
        

browse_dir()


